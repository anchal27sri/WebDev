[{"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\index.js":"1","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\App.js":"3","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\DishtdetailComponent.js":"6","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\AboutComponet.js":"15","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\redux\\reducer.js":"17"},{"size":643,"mtime":1613280805380,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":528,"mtime":1613844052044,"results":"21","hashOfConfig":"19"},{"size":1378,"mtime":1613448855982,"results":"22","hashOfConfig":"19"},{"size":1490,"mtime":1613296318355,"results":"23","hashOfConfig":"19"},{"size":2246,"mtime":1613534013942,"results":"24","hashOfConfig":"19"},{"size":2236,"mtime":1613844514140,"results":"25","hashOfConfig":"19"},{"size":5526,"mtime":1613813463384,"results":"26","hashOfConfig":"19"},{"size":2643,"mtime":1613288542487,"results":"27","hashOfConfig":"19"},{"size":1149,"mtime":1613534044156,"results":"28","hashOfConfig":"19"},{"size":10861,"mtime":1613811385275,"results":"29","hashOfConfig":"19"},{"size":2382,"mtime":1613296360011,"results":"30","hashOfConfig":"19"},{"size":4280,"mtime":1613296343959,"results":"31","hashOfConfig":"19"},{"size":445,"mtime":1613296748562,"results":"32","hashOfConfig":"19"},{"size":4223,"mtime":1613798352042,"results":"33","hashOfConfig":"19"},{"size":236,"mtime":1613843886044,"results":"34","hashOfConfig":"19"},{"size":410,"mtime":1613843655561,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1bvcf92",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\index.js",[],["75","76"],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\App.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\DishtdetailComponent.js",["77"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RenderComments({ commentArray }) {\r\n    // console.log(commentArray);\r\n    const menu = commentArray.map((com) => {\r\n        if (com == null) return (<div></div>);\r\n        return (\r\n            <div key={com.id} className=\"ul list-unstyled\">\r\n                <p >{com.comment}</p>\r\n                <p > -- {com.author},  {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(com.date)))}</p>\r\n            </div>\r\n        );\r\n    });\r\n    return menu;\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    // console.log(dish.name);\r\n    return (\r\n        <Card>\r\n            <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle heading>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    // console.log(props.comments);\r\n    if (props.dish) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link active>{props.dish.name}</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4>Comments</h4>\r\n                        <RenderComments commentArray={props.comments} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\MainComponent.js",["78"],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\HeaderComponent.js",["79"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem,\r\n    Button, Modal, ModalHeader,  ModalBody, ButtonGroup, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState(\r\n            {\r\n                isNavOpen: !this.state.isNavOpen\r\n            }\r\n        );\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin() {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" alt=\"Ristorante Con Fusion\" height=\"30\" width=\"41\"></img>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"> </span> Home\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/about\">\r\n                                        <span className=\"fa fa-info fa-lg\"> </span> About Us\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"> </span> Menu\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"> </span> Contact Us\r\n                                </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-8\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) =>  this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) =>  this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) =>  this.remember = input}/>\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\ContactComponent.js",["80"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form , FormGroup, Input, Label, Col, FormFeedback} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false,\r\n            }\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        alert(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3) {\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        }\r\n        else if (this.state.touched.firstname && firstname.length > 10){\r\n            errors.firstname = 'First Name should be <= 10 characeter';\r\n        }\r\n\r\n        if(this.state.touched.lastname && lastname.length < 3) {\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        }\r\n        else if (this.state.touched.lastname && lastname.length > 10){\r\n            errors.lastname = 'Last Name should be <= 10 characeter';\r\n        }\r\n\r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n        \r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link active>Contact Us</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\"First Name\"\r\n                                    value={this.state.firstname}\r\n                                    valid={errors.firstname === ''}\r\n                                    invalid={errors.firstname !== ''}\r\n                                    onBlur={this.handleBlur('firstname')}\r\n                                    onChange={this.handleInputChange}></Input>\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"lastname\" \r\n                                    placeholder=\"Last Name\"\r\n                                    value={this.state.lastname}\r\n                                    valid={errors.lastname === ''}\r\n                                    invalid={errors.lastname !== ''}\r\n                                    onBlur={this.handleBlur('lastname')}\r\n                                    onChange={this.handleInputChange}></Input>\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" \r\n                                    placeholder=\"Tel. Number\"\r\n                                    value={this.state.telnum}\r\n                                    valid={errors.telnum === ''}\r\n                                    invalid={errors.telnum !== ''}\r\n                                    onBlur={this.handleBlur('telnum')}\r\n                                    onChange={this.handleInputChange}></Input>\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\" \r\n                                    placeholder=\"Email\"\r\n                                    value={this.state.email}\r\n                                    valid={errors.email === ''}\r\n                                    invalid={errors.email !== ''}\r\n                                    onBlur={this.handleBlur('email')}\r\n                                    onChange={this.handleInputChange}></Input>\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                {/* <Label htmlfor=\"email\" md={2}>Email</Label> */}\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\"\r\n                                                onChange={this.handleInputChange}\r\n                                                checked={this.state.agree}/> \r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                    onChange={this.handleInputChange}\r\n                                    value={this.state.contactType}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\" \r\n                                    rows=\"12\"  onChange={this.handleInputChange}\r\n                                    value={this.state.message}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\components\\AboutComponet.js",["81"],"import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader({leader}) {\r\n        return (\r\n            <Media className=\"mb-3\">\r\n                <img className=\"mr-3\" src={leader.image}></img>\r\n                <Media body>\r\n                    <Media heading>{leader.name}</Media>\r\n                    <h6>{leader.designation}</h6>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        );\r\n    }\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader}/>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\user\\Documents\\webD\\CourseraReactFrontEnd\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":27,"column":5,"nodeType":"92","messageId":"93","endLine":29,"endColumn":6},{"ruleId":"86","severity":1,"message":"94","line":3,"column":45,"nodeType":"88","messageId":"89","endLine":3,"endColumn":56},{"ruleId":"95","severity":1,"message":"96","line":120,"column":29,"nodeType":"97","endLine":120,"endColumn":71},{"ruleId":"98","severity":1,"message":"99","line":10,"column":17,"nodeType":"97","endLine":10,"endColumn":58},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ButtonGroup' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]