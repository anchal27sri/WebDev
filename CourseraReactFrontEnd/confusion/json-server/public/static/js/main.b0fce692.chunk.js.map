{"version":3,"sources":["redux/ActionTypes.js","shared/baseURL.js","redux/ActionCreater.js","components/HeaderComponent.js","components/LoadingComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/DishtdetailComponent.js","components/AboutComponet.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","ADD_COMMENT","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","ADD_FEEDBACK","baseUrl","postComment","dishId","rating","author","comment","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","type","ActionTypes","payload","addComment","catch","console","log","alert","commentsFailed","errmess","addComments","comments","dishesLoading","dishesFailed","addDishes","dishes","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leaders","addFeedbacks","feedbacks","Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","username","value","password","remember","checked","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","alt","height","width","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","id","name","innerRef","input","check","color","Component","Loading","RenderMenuItem","dish","Card","CardImg","image","CardImgOverlay","CardTitle","heading","Menu","menu","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","agree","contactType","resetFeedbackForm","role","model","Row","htmlfor","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","Footer","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","CommentForm","RenderComments","commentArray","com","Intl","DateTimeFormat","year","month","day","format","parse","RenderDish","top","DishDetail","About","RenderLeader","Media","CardHeader","title","list","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","location","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","ErrMess","commentsErrMess","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","Feedback","feedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0fce692.chunk.js","sourcesContent":["export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'DISHES_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const POST_FEEDBACK = 'POST_FEEDBACK';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","export const baseUrl = 'http://localhost:3001/'","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseURL';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        comment: comment,\r\n    }\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment,\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n                    if (response.ok) {\r\n                        return response; // The response will be delivered to the next 'then'\r\n                    }\r\n                    else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                    error => {\r\n                        var errmess = new Error(error.message);\r\n                        throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('Post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message) })\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response; // The response will be delivered to the next 'then'\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n/* Returns a function as it is a thunk */\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    console.log(dispatch);\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response; // The response will be delivered to the next 'then'\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    // console.log(\"Promotion dispatch\");\r\n\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response; // The response will be delivered to the next 'then'\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n/* Returns a function as it is a thunk */\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    console.log(dispatch);\r\n\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response; // The response will be delivered to the next 'then'\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addLeaders(dishes)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) =>{\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    }\r\n    // newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n        })\r\n        .then(  response => {\r\n                    if (response.ok) {\r\n                        return response; // The response will be delivered to the next 'then'\r\n                    }\r\n                    else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                }\r\n            )\r\n        .then(response => response.json())\r\n        .then(response => {dispatch(addFeedbacks(response)); alert('Thank you for your feedback!\\n' + JSON.stringify(response)) })\r\n        .catch(error => { console.log('Post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message) })\r\n}\r\n\r\nexport const addFeedbacks = (feedbacks) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedbacks\r\n});","import React, { Component } from 'react';\r\nimport { Jumbotron, Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem,\r\n    Button, Modal, ModalHeader,  ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseURL';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState(\r\n            {\r\n                isNavOpen: !this.state.isNavOpen\r\n            }\r\n        );\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin() {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src={baseUrl + 'images/logo.png'} alt=\"Ristorante Con Fusion\" height=\"30\" width=\"41\"></img>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"> </span> Home\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"> </span> About Us\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"> </span> Menu\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"> </span> Contact Us\r\n                                </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-8\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) =>  this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) =>  this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) =>  this.remember = input}/>\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseURL';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n\r\n        <Card >\r\n            <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle heading>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link active>Menu</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, Actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current State is: \" + JSON.stringify(values));\r\n        // alert(\"Current State is: \" + JSON.stringify(values));\r\n        console.log(values);\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link active>Contact Us</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                            isNumber: 'Should be Number',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            validEmail,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check=input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Fade} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    console.log(\"RenderCard\", item, isLoading, errMess);\r\n    if(isLoading) {\r\n        return (<Loading/>);\r\n    }\r\n    else if(errMess) {\r\n        return (<h4>{errMess}</h4>);\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform  in \r\n                transformProps={\r\n                    {\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }\r\n                }>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n    console.log(\"Home:\",props);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                    isLoading={props.dishLoading}\r\n                    errMess={props.dishErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promoLoading}\r\n                    errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leaderLoading}\r\n                    errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        // console.log(\"Current State is: \" + JSON.stringify(values));\r\n        // alert(\"Current State is: \" + JSON.stringify(values.comment));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        // console.log('Comment Form ' + this.state.isModalOpen);\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row>\r\n                                <Label htmlfor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" id=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"5\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Button outline><span className=\"fa fa-pencil fa-lg\" onClick={this.toggleModal}> Submit Comment</span></Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ commentArray, postComment, dishId }) {\r\n    // console.log(commentArray);\r\n    const menu = commentArray.map((com) => {\r\n        if (com == null) return (<div></div>);\r\n        return (\r\n            <Fade in>\r\n            <li key={com.id} className=\"ul list-unstyled\">\r\n                <p >{com.comment}</p>\r\n                <p > -- {com.author},  {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(com.date)))}</p>\r\n\r\n            </li>\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n            <Stagger in>\r\n                {menu}\r\n            </Stagger>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    // console.log(dish.name);\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in\r\n                transformProps={\r\n                    {\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }\r\n                }>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle heading>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction DishDetail(props) {\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link active>{props.dish.name}</Link></BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name + \"bingo\"}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments commentArray={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport { checkPropTypes } from 'prop-types';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader({leader, isLoading, errMess}) {\r\n        console.log(\"RenderLeader Loading: \",isLoading);\r\n        if(isLoading) {\r\n            return (<Loading/>);\r\n        }\r\n        else if(errMess) {\r\n            return (<h4>{errMess}</h4>);\r\n        }\r\n        else \r\n            return (\r\n                <Media className=\"mb-3\">\r\n                    <img className=\"mr-3\" src={baseUrl + leader.image}></img>\r\n                    <Media body>\r\n                        <Media heading>{leader.name}</Media>\r\n                        <h6>{leader.designation}</h6>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            );\r\n    }\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <FadeTransform in>\r\n            <RenderLeader leader={leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n            </FadeTransform>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreater';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport Header from './HeaderComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport DishDetail from './DishtdetailComponent';\r\nimport About from './AboutComponet';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions,\r\n        feedbacks: state.feedbacks,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => dispatch(fetchDishes()),\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n\r\n        // console.log(\"Main\", this.props.promotions);\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.dishesLoading}\r\n                    ErrMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders}\r\n                                                                                 leaderLoading={this.props.leaders.isLoading} \r\n                                                                                 leaderErrMess={this.props.leaders.errMess}/>}/> \r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n                                                                                     postFeedback={this.props.postFeedback}/>} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n\r\n// json-server --watch db.json -p 3001 -d 2000","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n            \r\n            case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: [],\r\n}, action) => {\r\n\r\n    // console.log(\"Action payload: \" + action.payload);\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n            \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            // console.log(\"Comments:\", comment);\r\n            return { ...state, errMess: null, comments: state.comments.concat(comment.comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n            \r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n\r\nexport const Feedback = (state = {\r\n    errMess: null,\r\n    feedbacks: [],\r\n}, action) => {\r\n\r\n    // console.log(\"Action payload: \" + action.payload);\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_FEEDBACK:\r\n            var feedback = action.payload;\r\n            // console.log(\"Comments:\", comment);\r\n            return { ...state, errMess: null, feedbacks: state.feedbacks.concat(feedback.feedback)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n          <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport { InitialFeedback, Feedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            feedback: Feedback,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}